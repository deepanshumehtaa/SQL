# MySQL with Python

## What is Database copression?
> Database compression is a set of techniques that reorganizes database content to save on physical storage space and improve performance speeds. Compression can be achieved in two primary ways
   Lossless: Original data can be fully reconstructed from the compressed data.
   
   What are the disadvantages of database compression? When should we avoid it?
   
   
   Protocol compression, which enables compressing the data stream between the client and server.
 > In networking IP Payload Compression Protocol, or IPComp, is a low level compression protocol for IP datagrams defined in RFC 3173.
    The intent is to reduce the size of data transmitted over congested or slow network connections, thereby increasing the speed of such networks without losing data. According to the RFC requirements, compression must be done before fragmenting or encrypting the packet. 
    It further states that each datagram must be compressed independently so it can be decompressed even if received out of order. This is important because it allows IPComp to work with both TCP and UDP network communications.
    
##  Some Thumb rules before we start:
    
>    Any application that accepts input must expect to handle bad data:
    	The bad data might be accidental, such as out-of-range values. The application can use server-side checks such as unique constraints and *NOT NULL* constraints, to keep the bad data from ever reaching the database. 
    	On the client side, use techniques such as *exception handlers* to report any problems and take corrective action.
    	 
>    	 The bad data might also be deliberate, representing an “SQL injection” attack: Never concatenate a user input value into an SQL statement without doing validation and escaping first. Even when accepting input generated by some other program, expect that the other program could also have been compromised and be sending you incorrect or malicious data.
    	 
>    	 Use the appropriate method to retrieve items from the result set as you loop through them.  fetchone() retrieves a single item, 
    	 when you know the result set contains a single row. fetchall() retrieves all the items, when you know the result set contains a limited number of rows that can fit comfortably into memory. fetchmany() is the general-purpose method when you cannot predict the size of the result set: you keep calling it and looping through the returned items, until there are no more results to process.
    	 
## what is a Database engine?
>   A database engine (or storage engine) is the underlying software component that a database management system (DBMS) uses to create, read, update and delete (CRUD) data from a database.
 
